#include <iostream>
using namespace std;


template<typename T>
struct node {
    T* val;
    node<T>* left, right;
    node<T>* parent;
    
    node() : val(NULL), left(nullptr), right(nullptr), parent(nullptr) {}
    node(node<T>* left, node<T>* right, node<T>* parent) : val(NULL), left(left), right(right), parent(parent) {}
    node(node<T>* left, node<T>* right, node<T>* parent, T val) : val(val), left(left), right(right), parent(parent) {}
};


template<typename T>
class tree{
private:
    node<T>* root;
public:
    tree(){}
    tree(node<T> root) : root(root) {}


    node<T>* getRoot(){
        return this->root;
    }
    

};


int main(){

    tree<int> a();


    return 0;
}


// 1. –ë–∞–∑–æ–≤—ã–µ –º–µ—Ç–æ–¥—ã
// –≠—Ç–∏ –º–µ—Ç–æ–¥—ã —è–≤–ª—è—é—Ç—Å—è –æ—Å–Ω–æ–≤–æ–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–µ—Ä–µ–≤—å—è–º–∏.

// 1.1. –í—Å—Ç–∞–≤–∫–∞ —É–∑–ª–∞ (insert)
// –î–æ–±–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –±–∏–Ω–∞—Ä–Ω–æ–µ –¥–µ—Ä–µ–≤–æ –ø–æ–∏—Å–∫–∞ (BST).
// void insert(int value);
// üîπ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤: –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏–∏ BST, –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–∏ –¥–µ—Ä–µ–≤–∞.

// 1.2. –ü–æ–∏—Å–∫ —ç–ª–µ–º–µ–Ω—Ç–∞ (find)
// –ò—â–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –≤ BST.
// bool find(int value);
// üîπ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤: –ø–æ–∏—Å–∫–µ —ç–ª–µ–º–µ–Ω—Ç–∞ –≤ BST.

// 1.3. –£–¥–∞–ª–µ–Ω–∏–µ —É–∑–ª–∞ (remove)
// –£–¥–∞–ª—è–µ—Ç —É–∑–µ–ª –∏–∑ BST.
// void remove(int value);
// üîπ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤: –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—ã –¥–µ—Ä–µ–≤–∞.

// 1.4. –ü–æ–¥—Å—á–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ —É–∑–ª–æ–≤ (countNodes)
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤ –≤ –¥–µ—Ä–µ–≤–µ.
// int countNodes();
// üîπ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤: –∑–∞–¥–∞—á–∞—Ö –Ω–∞ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —É–∑–ª–æ–≤.

// 1.5. –ü–æ–¥—Å—á–µ—Ç –≤—ã—Å–æ—Ç—ã –¥–µ—Ä–µ–≤–∞ (height)
// –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –≤—ã—Å–æ—Ç—É –¥–µ—Ä–µ–≤–∞.
// int height();
// üîπ –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤: –ø—Ä–æ–≤–µ—Ä–∫–µ —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω–æ—Å—Ç–∏ –¥–µ—Ä–µ–≤–∞, –≤—ã—á–∏—Å–ª–µ–Ω–∏–∏ –¥–∏–∞–º–µ—Ç—Ä–∞.